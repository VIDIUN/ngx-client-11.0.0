/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { typesMappingStorage } from '../kaltura-object-base';
import { KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter } from './KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter';
/**
 * @record
 */
export function KalturaDeliveryProfileAkamaiAppleHttpManifestFilterArgs() { }
var KalturaDeliveryProfileAkamaiAppleHttpManifestFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDeliveryProfileAkamaiAppleHttpManifestFilter, _super);
    function KalturaDeliveryProfileAkamaiAppleHttpManifestFilter(data) {
        return _super.call(this, data) || this;
    }
    /**
     * @return {?}
     */
    KalturaDeliveryProfileAkamaiAppleHttpManifestFilter.prototype._getMetadata = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDeliveryProfileAkamaiAppleHttpManifestFilter' }
        });
        return result;
    };
    return KalturaDeliveryProfileAkamaiAppleHttpManifestFilter;
}(KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter));
export { KalturaDeliveryProfileAkamaiAppleHttpManifestFilter };
typesMappingStorage['KalturaDeliveryProfileAkamaiAppleHttpManifestFilter'] = KalturaDeliveryProfileAkamaiAppleHttpManifestFilter;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0RmlsdGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8va2FsdHVyYS1uZ3gtY2xpZW50LyIsInNvdXJjZXMiOlsibGliL2FwaS90eXBlcy9LYWx0dXJhRGVsaXZlcnlQcm9maWxlQWthbWFpQXBwbGVIdHRwTWFuaWZlc3RGaWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQXlCLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDcEYsT0FBTyxFQUFFLHVEQUF1RCxFQUErRCxNQUFNLDJEQUEyRCxDQUFDOzs7OztBQU9qTSxJQUFBO0lBQXlFLCtFQUF1RDtJQUk1SCw2REFBWSxJQUErRDtlQUV2RSxrQkFBTSxJQUFJLENBQUM7S0FDZDs7OztJQUVTLDBFQUFZOzs7SUFBdEI7O1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHFEQUFxRCxFQUFFO1NBQy9GLENBQ0osQ0FBQztRQUNGLE1BQU0sQ0FBQyxNQUFNLENBQUM7S0FDakI7OERBNUJMO0VBU3lFLHVEQUF1RCxFQW9CL0gsQ0FBQTtBQXBCRCwrREFvQkM7QUFFRCxtQkFBbUIsQ0FBQyxxREFBcUQsQ0FBQyxHQUFHLG1EQUFtRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEsIHR5cGVzTWFwcGluZ1N0b3JhZ2UgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFEZWxpdmVyeVByb2ZpbGVBa2FtYWlBcHBsZUh0dHBNYW5pZmVzdEJhc2VGaWx0ZXIsIEthbHR1cmFEZWxpdmVyeVByb2ZpbGVBa2FtYWlBcHBsZUh0dHBNYW5pZmVzdEJhc2VGaWx0ZXJBcmdzIH0gZnJvbSAnLi9LYWx0dXJhRGVsaXZlcnlQcm9maWxlQWthbWFpQXBwbGVIdHRwTWFuaWZlc3RCYXNlRmlsdGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhRGVsaXZlcnlQcm9maWxlQWthbWFpQXBwbGVIdHRwTWFuaWZlc3RGaWx0ZXJBcmdzICBleHRlbmRzIEthbHR1cmFEZWxpdmVyeVByb2ZpbGVBa2FtYWlBcHBsZUh0dHBNYW5pZmVzdEJhc2VGaWx0ZXJBcmdzIHtcbiAgICBcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0RmlsdGVyIGV4dGVuZHMgS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0QmFzZUZpbHRlciB7XG5cbiAgICBcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0RmlsdGVyQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFEZWxpdmVyeVByb2ZpbGVBa2FtYWlBcHBsZUh0dHBNYW5pZmVzdEZpbHRlcicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxudHlwZXNNYXBwaW5nU3RvcmFnZVsnS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0RmlsdGVyJ10gPSBLYWx0dXJhRGVsaXZlcnlQcm9maWxlQWthbWFpQXBwbGVIdHRwTWFuaWZlc3RGaWx0ZXI7Il19