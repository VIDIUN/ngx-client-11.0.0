/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { typesMappingStorage } from '../kaltura-object-base';
import { KalturaDeliveryProfileFilter } from './KalturaDeliveryProfileFilter';
/**
 * @record
 */
export function KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilterArgs() { }
var KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter, _super);
    function KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter(data) {
        return _super.call(this, data) || this;
    }
    /**
     * @return {?}
     */
    KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter.prototype._getMetadata = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter' }
        });
        return result;
    };
    return KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter;
}(KalturaDeliveryProfileFilter));
export { KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter };
typesMappingStorage['KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter'] = KalturaDeliveryProfileAkamaiAppleHttpManifestBaseFilter;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0QmFzZUZpbHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2thbHR1cmEtbmd4LWNsaWVudC8iLCJzb3VyY2VzIjpbImxpYi9hcGkvdHlwZXMvS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0QmFzZUZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBeUIsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNwRixPQUFPLEVBQUUsNEJBQTRCLEVBQW9DLE1BQU0sZ0NBQWdDLENBQUM7Ozs7O0FBT2hILElBQUE7SUFBNkUsbUZBQTRCO0lBSXJHLGlFQUFZLElBQW1FO2VBRTNFLGtCQUFNLElBQUksQ0FBQztLQUNkOzs7O0lBRVMsOEVBQVk7OztJQUF0Qjs7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcseURBQXlELEVBQUU7U0FDbkcsQ0FDSixDQUFDO1FBQ0YsTUFBTSxDQUFDLE1BQU0sQ0FBQztLQUNqQjtrRUE1Qkw7RUFTNkUsNEJBQTRCLEVBb0J4RyxDQUFBO0FBcEJELG1FQW9CQztBQUVELG1CQUFtQixDQUFDLHlEQUF5RCxDQUFDLEdBQUcsdURBQXVELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSwgdHlwZXNNYXBwaW5nU3RvcmFnZSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUZpbHRlciwgS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUZpbHRlckFyZ3MgfSBmcm9tICcuL0thbHR1cmFEZWxpdmVyeVByb2ZpbGVGaWx0ZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFEZWxpdmVyeVByb2ZpbGVBa2FtYWlBcHBsZUh0dHBNYW5pZmVzdEJhc2VGaWx0ZXJBcmdzICBleHRlbmRzIEthbHR1cmFEZWxpdmVyeVByb2ZpbGVGaWx0ZXJBcmdzIHtcbiAgICBcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0QmFzZUZpbHRlciBleHRlbmRzIEthbHR1cmFEZWxpdmVyeVByb2ZpbGVGaWx0ZXIge1xuXG4gICAgXG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFEZWxpdmVyeVByb2ZpbGVBa2FtYWlBcHBsZUh0dHBNYW5pZmVzdEJhc2VGaWx0ZXJBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0QmFzZUZpbHRlcicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxudHlwZXNNYXBwaW5nU3RvcmFnZVsnS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0QmFzZUZpbHRlciddID0gS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUFrYW1haUFwcGxlSHR0cE1hbmlmZXN0QmFzZUZpbHRlcjsiXX0=